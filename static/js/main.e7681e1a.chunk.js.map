{"version":3,"sources":["redux/robots.types.js","redux/robots.reducers.js","redux/store.js","components/search-box.comp.jsx","components/card.comp.jsx","components/card-list.comp.jsx","components/scroll.comp.jsx","components/error-boundry.comp.jsx","containers/App.jsx","redux/robots.actions.js","index.jsx","robots.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initSearchState","searchField","initRobotState","isLoading","error","robots","logger","createLogger","store","configureStore","reducer","search","state","action","type","payload","middleware","gDM","concat","SearchBox","onSearchChange","className","name","placeholder","onChange","ev","target","value","Card","id","email","src","alt","CardList","map","Scroll","children","style","overflowY","border","height","ErrorBoundry","props","hasError","info","this","setState","React","Component","App","onRequestRobotsRx","searchFieldRx","onSearchFieldRx","isLoadingRx","robotsRx","errorRx","filterRobots","filter","robo","toLowerCase","includes","length","connect","dispatch","text","setSearchField","fetch","then","resp","json","data","catch","errorMsg","message","ReactDOM","render","username","document","getElementById"],"mappings":"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","file":"static/js/main.e7681e1a.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_FAILED,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS\r\n} from './robots.types';\r\n\r\nconst initSearchState = {\r\n  searchField: ''\r\n};\r\n\r\nexport const searchRobots = (state = initSearchState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return {\r\n        ...state,\r\n        searchField: payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//\r\n\r\nconst initRobotState = {\r\n  isLoading: false,\r\n  error: '', // error.message\r\n  robots: []\r\n};\r\n\r\nexport const robotReducers = (state = initRobotState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case REQUEST_ROBOTS_PENDING:\r\n      return { ...state, isLoading: true };\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return { ...state, robots: payload, isLoading: false };\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return { ...state, error: payload, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { createLogger } from 'redux-logger';\r\n// reducer\r\nimport { searchRobots, robotReducers } from './robots.reducers';\r\n// middlewares\r\nconst logger = createLogger();\r\n\r\nexport const store = configureStore({\r\n  reducer: { search: searchRobots, robots: robotReducers },\r\n  middleware: gDM => gDM().concat(logger)\r\n});\r\n","import React from 'react';\r\n\r\nexport default function SearchBox({ searchField, onSearchChange }) {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        className=\"pa3 ba b--green bg-lightest\"\r\n        type=\"search\"\r\n        name=\"search\"\r\n        placeholder=\"type to search\"\r\n        onChange={ev => onSearchChange(ev.target.value)}\r\n        value={searchField}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Card({ id, name, email }) {\r\n  return (\r\n    <div className=\"bg-light-blue dib br4 pa3 ma2 grow\">\r\n      <img\r\n        src={`https://robohash.org/${id}?size=150x150&bgset=bg2&set=any`}\r\n        alt={`robot ${id}`}\r\n      />\r\n      <div>\r\n        <h4>\r\n          {id}. {name}\r\n        </h4>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Card from './card.comp';\r\n\r\nexport default function CardList({ robots }) {\r\n  return (\r\n    <div>\r\n      {robots.map(({ id, name, email }) => (\r\n        <Card key={`key-${id}`} id={id} name={name} email={email} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Scroll({ children }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: 'scroll',\r\n        border: '1px solid black',\r\n        height: `calc(100vh - 195px)`\r\n      }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default class ErrorBoundry extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  // static getDerivedStateFromError(error) {\r\n  // Update state so next render shows fallback UI.\r\n  // return { error: error };\r\n  // }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n\r\n    // Log the error to an error reporting service\r\n    // logErrorToExampleService(error, info);\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n    const { children } = this.props;\r\n\r\n    if (hasError) {\r\n      return <h1 className=\"red\">Something broke!..</h1>;\r\n    }\r\n    return children;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n//\r\nimport SearchBox from '../components/search-box.comp';\r\nimport CardList from '../components/card-list.comp';\r\nimport Scroll from '../components/scroll.comp';\r\nimport ErrorBoundry from '../components/error-boundry.comp';\r\n// redux\r\nimport { setSearchField, requestRobots } from '../redux/robots.actions';\r\n\r\n// style\r\nimport './App.css';\r\n\r\n//\r\nconst mapStateToProps = ({ robots, search }) => ({\r\n  searchFieldRx: search.searchField,\r\n  isLoadingRx: robots.isLoading,\r\n  robotsRx: robots.robots,\r\n  errorRx: robots.error\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSearchFieldRx: text => dispatch(setSearchField(text)),\r\n  onRequestRobotsRx: () => dispatch(requestRobots())\r\n});\r\n\r\nclass App extends React.Component {\r\n  //\r\n  componentDidMount() {\r\n    const { onRequestRobotsRx } = this.props;\r\n\r\n    // input-from: online-fake-api\r\n    onRequestRobotsRx();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      searchFieldRx,\r\n      onSearchFieldRx,\r\n      isLoadingRx,\r\n      robotsRx,\r\n      errorRx\r\n    } = this.props;\r\n\r\n    const filterRobots = robotsRx.filter(robo => {\r\n      return robo.name.toLowerCase().includes(searchFieldRx.toLowerCase());\r\n    });\r\n\r\n    // console.log(this.props);\r\n\r\n    // during loading\r\n    if (isLoadingRx) {\r\n      return <h1 className=\"tc f1\">Loading...</h1>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"tc\">\r\n        {!isLoadingRx && errorRx ? (\r\n          <h1 className=\"tc f1 red\">{errorRx}</h1>\r\n        ) : (\r\n          <h1 className=\"f1\">Success! - Robo List</h1>\r\n        )}\r\n\r\n        <SearchBox\r\n          searchField={searchFieldRx}\r\n          onSearchChange={onSearchFieldRx}\r\n        />\r\n        <Scroll>\r\n          <ErrorBoundry>\r\n            {filterRobots.length ? (\r\n              <CardList robots={filterRobots} />\r\n            ) : (\r\n              <div>doesn&apos;t exist</div>\r\n            )}\r\n          </ErrorBoundry>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_FAILED,\r\n  REQUEST_ROBOTS_PENDING,\r\n  REQUEST_ROBOTS_SUCCESS\r\n} from './robots.types';\r\n\r\n// const localUrl = 'http://localhost:3000/robots' - if using server\r\nconst dummyUrl = 'https://jsonplaceholder.typicode.com/users';\r\n\r\nexport const setSearchField = text => ({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text\r\n});\r\n\r\n// using redux-thunk, inception\r\nexport const requestRobots = () => dispatch => {\r\n  // loading\r\n  dispatch({\r\n    type: REQUEST_ROBOTS_PENDING\r\n  });\r\n\r\n  return fetch(dummyUrl)\r\n    .then(resp => resp.json())\r\n    .then(data =>\r\n      dispatch({\r\n        type: REQUEST_ROBOTS_SUCCESS,\r\n        payload: data\r\n      })\r\n    )\r\n    .catch(error => {\r\n      const errorMsg =\r\n        typeof error.message === 'string' ? error.message : 'Error!..';\r\n      dispatch({\r\n        type: REQUEST_ROBOTS_FAILED,\r\n        payload: errorMsg\r\n      });\r\n    });\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// redux\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\n// data\r\nimport { robotData } from './robots';\r\n// style\r\nimport './bootstrap.min.css';\r\nimport 'tachyons'; // https://tachyons.io/docs/\r\nimport './index.css';\r\n// comp\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App robots={robotData} />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","export const robotData = [\r\n  {\r\n    id: 1,\r\n    name: 'John Doe',\r\n    username: 'John',\r\n    email: 'john@email.com'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Jane Doe',\r\n    username: 'Jane',\r\n    email: 'jane@email.com'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Joe Doe',\r\n    username: 'Joe',\r\n    email: 'joe@email.com'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Juan Doe',\r\n    username: 'Juan',\r\n    email: 'juan@email.com'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Jack Doe',\r\n    username: 'Jack',\r\n    email: 'jack@email.com'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Jill Doe',\r\n    username: 'Jill',\r\n    email: 'jill@email.com'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Jun Doe',\r\n    username: 'Jun',\r\n    email: 'jun@email.com'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Jenny Doe',\r\n    username: 'Jenny',\r\n    email: 'jenny@email.com'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Jana Doe',\r\n    username: 'Jana',\r\n    email: 'jana@email.com'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Jennifer Doe',\r\n    username: 'Jennifer',\r\n    email: 'jennifer@email.com'\r\n  }\r\n];\r\n"],"sourceRoot":""}